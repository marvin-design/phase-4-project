"""Add user_id to Dog model

Revision ID: fcdd4abe9c18
Revises: ddc79cd93788
Create Date: 2025-07-02 01:08:14.703667

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'fcdd4abe9c18'
down_revision = 'ddc79cd93788'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # First, add the column as nullable
    op.add_column('dog', sa.Column('user_id', sa.Integer(), nullable=True))

    # Get the ID of the first user to use as a default
    # This assumes at least one user exists.
    # If users table might be empty, add more robust logic here.
    connection = op.get_bind()
    first_user = connection.execute(sa.text("SELECT id FROM \"user\" ORDER BY id LIMIT 1")).scalar()

    if first_user:
        # Update existing dogs with the default user ID
        op.execute(f"UPDATE dog SET user_id = {first_user}")

        # Now, alter the column to be non-nullable
        op.alter_column('dog', 'user_id', nullable=False)
    
    # Finally, create the foreign key constraint
    op.create_foreign_key('fk_dog_user_id', 'dog', 'user', ['user_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('dog', schema=None) as batch_op:
        batch_op.drop_constraint('fk_dog_user_id', type_='foreignkey')
        batch_op.drop_column('user_id')

    # ### end Alembic commands ###
